@page "/composer"

<PageTitle>Composer</PageTitle>

<h1>Composer</h1>

<p role="status">number of qubits: @currentCount</p>

<div class="horizontal-container">
    <div class="stepper">
        <button class="button stepper-button" @onclick="DecrementCount">-</button>
        <input type="number" 
            class="stepper-input" 
            value="@currentCount"
            @onchange="OnInputChange" />
        <button class="button stepper-button" @onclick="IncrementCount">+</button>
    </div>
    <div class="h-gate">
        <p>H</p>
    </div>
    <div class="classical-gate">
        @* <svg viewBox="0 0 20 20">
            <circle cx="10" cy="10" r="8" stroke="black" stroke-width="1" fill="none"/>
            <line x1="4.34" y1="10" x2="15.66" y2="10" stroke="black" stroke-width="1"/>
            <line x1="10" y1="4.34" x2="10" y2="15.66" stroke="black" stroke-width="1"/>
        </svg> *@
        <svg class="x-gate" viewBox="0 0 25 25" width="25" height="25">
            <circle cx="12.5" cy="12.5" r="6.25" stroke="black" stroke-width="1" fill="none"/>
            <line x1="6.25" y1="12.5" x2="18.75" y2="12.5" stroke="black" stroke-width="1"/>
            <line x1="12.5" y1="6.25" x2="12.5" y2="18.75" stroke="black" stroke-width="1"/>
        </svg>
    </div>
</div>

@code {
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }

    private void DecrementCount()
    {
        currentCount--;
    }

    private void OnInputChange(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out int value))
        {
            currentCount = value;
        }
    }
}


@for (int i = 0; i < currentCount; i++)
{
    <div style="display: flex; align-items: center;">
        <span style="margin-right: 20px; font-size: 20px;">q<sub>@i</sub></span>
        <div class="qubit-line"></div>
    </div>
}